name: Build and Deploy App

on:
  #push:
    #branches:
      #- main
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:

      - name: Set up environment variables
        run: |
          echo "AWS_REGION=us-east-2" >> $GITHUB_ENV
          REPO_NAME=${GITHUB_REPOSITORY##*/}  # Extrae solo el nombre del repo
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV
  
      - name: Print environment variables
        run: |
          echo "AWS_REGION: $AWS_REGION"
          echo "REPO_NAME: $REPO_NAME"
          echo "IMAGE_TAG: $IMAGE_TAG"

      # Paso 1: Checkout del repositorio de React (la app)
      - name: Checkout React Repo
        uses: actions/checkout@v3
        with:
          path: react-repo

      - name: PWD react-repo
        run: |
          pwd
          ls -a
          cd react-repo
          ls -a
          cd landing-page
          ls -a
          pwd
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
  
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ env.AWS_REGION }}

      # Crear el repositorio ECR si no existe
      - name: Check if ECR repository exists
        id: ecr_check
        run: |
          aws ecr describe-repositories --repository-names ${{ env.REPO_NAME }} --region ${{ env.AWS_REGION }} || exit 0

      - name: Create ECR repository if not exists
        if: steps.ecr_check.outputs == ''
        run: |
          aws ecr create-repository \
            --repository-name ${{ env.REPO_NAME }} \
            --region ${{ env.AWS_REGION }}
        
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      # Construir la imagen Docker
      - name: Build Docker image
        run: |
          docker build -t ${{ env.REPO_NAME }}:${{ env.IMAGE_TAG }} ./react-repo/landing-page/

      # Subir la imagen a ECR
      - name: Push Docker image to Amazon ECR
        run: |
          docker tag ${{ env.REPO_NAME }}:${{ env.IMAGE_TAG }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.REPO_NAME }}:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.REPO_NAME }}:${{ env.IMAGE_TAG }}

      # Guardar la URL de la imagen en las variables de GitHub Actions
      - name: Save image URL for next workflow
        run: echo "IMAGE_URL=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.REPO_NAME }}:${{ env.IMAGE_TAG }}" >> $GITHUB_ENV
