# .github/workflows/deploy.yml

name: Launch Infra
on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  launch_ec2:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del repositorio de React (la app)
      - name: Checkout React Repo
        uses: actions/checkout@v3

      # Paso 2: Checkout del repositorio de Terraform (infraestructura)
      - name: Checkout Terraform Repo
        uses: actions/checkout@v3
        with:
          repository: git@github.com:gaston-campagno/infra.git
          path: ./

      # Paso 3: Checkout del repositorio de Scripts de user_data
      - name: Checkout User Data Scripts Repo
        uses: actions/checkout@v3
        with:
          repository: git@github.com:gaston-campagno/scripts.git
          path: ./

      # Paso 4: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Paso 5: Inicializar Terraform
      - name: Initialize Terraform
        working-directory: terraform-code
        run: terraform init

      # Paso 6: Aplicar Terraform y capturar el output del SG ID
      - name: Apply Terraform and Capture SG ID
        working-directory: terraform-code
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform apply -auto-approve
          # Guardar el ID del Security Group en un archivo temporal para usarlo más tarde
          echo "SECURITY_GROUP_ID=$(terraform output -raw security_group_id)" >> $GITHUB_ENV

      # Paso 7: Aplicar reglas del Security Group desde el repo de la aplicación
      - name: Apply Security Group Rules
        working-directory: .
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SECURITY_GROUP_ID: ${{ env.SECURITY_GROUP_ID }}  # Usamos el output de Terraform aquí
        run: |
          # Si tus reglas del security group están en Terraform, también puedes ejecutar otro terraform apply aquí
          cd path/to/your/app-repo/sg-rules
          terraform init
          terraform apply -var="security_group_id=$SECURITY_GROUP_ID" -auto-approve
          # Paso 8: Guardar Variables en el Repositorio
          
      - name: Guardar Variables en el Repositorio
        run: |
          # Guarda la IP pública de la instancia
          echo "Guardando EC2_INSTANCE_PUBLIC_IP en Variables del Repositorio"
          gh api -X PUT /repos/$GITHUB_REPOSITORY/actions/variables/EC2_INSTANCE_PUBLIC_IP \
            -f value=$EC2_INSTANCE_PUBLIC_IP

          # Guarda el ID de la instancia
          echo "Guardando EC2_INSTANCE_ID en Variables del Repositorio"
          gh api -X PUT /repos/$GITHUB_REPOSITORY/actions/variables/EC2_INSTANCE_ID \
            -f value=$EC2_INSTANCE_ID
